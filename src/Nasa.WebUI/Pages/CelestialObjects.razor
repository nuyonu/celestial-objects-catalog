@page "/celestialObjects"
@using Nasa.WebUI.Models.CelestialObjects
@using Nasa.WebUI.Models
@inject HttpClient client;
@inject IMatDialogService MatDialogService

<PageTitle>Celestial objects</PageTitle>

@* TODO check this, move to css file *@
<style>
    .demo-mat-card {
        min-width: 400px;
        max-width: 500px;
    }
    
    .demo-mat-card-content {
        padding: 1rem;
    }
    
    .demo-mat-card-clean-margin {
        margin: 0px;
    }
</style>

<div class="d-flex flex-row justify-content-between">
    <MatTextField class="mx-2" @bind-Value="@requestParams.Name" Label="Search by name"></MatTextField>
    <MatTextField class="mx-2" @bind-Value="@requestParams.StateOwner" Label="Search by state owner"></MatTextField>
    <MatSelect Label="Pick a type" @bind-Value="requestParams.Type">
        <MatOptionString Value=""></MatOptionString>
        @foreach (var type in types)
        {
            <MatOptionString Value="@type">@type</MatOptionString>
        }
    </MatSelect>
    <MatButton Raised="true" @onclick="UpdateCelestialObjectsAsync">Search</MatButton>
</div>

<div class="d-flex flex-row flex-wrap">
    @foreach (var celestialObject in celestialObjectsResponse)
    {
        <MatCard class="demo-mat-card m-3">
            <MatCardContent>
                <MatCardMedia Wide="true" ImageUrl="https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Planets2013.svg/260px-Planets2013.svg.png"></MatCardMedia>
                <div class="demo-mat-card-content">
                    <MatHeadline6 class="demo-mat-card-clean-margin">
                        @celestialObject.Name
                    </MatHeadline6>
                    <MatSubtitle2 class="demo-mat-card-clean-margin">
                        @celestialObject.Type
                    </MatSubtitle2>
                </div>

                <MatBody2 class="demo-mat-card-content demo-mat-card-clean-margin">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Mass: @celestialObject.Mass</li>
                        <li class="list-group-item">Surface temperature: @celestialObject.SurfaceTemperature</li>
                        <li class="list-group-item">Equatorial diameter: @celestialObject.EquatorialDiameter</li>
                        <li class="list-group-item">Discovery date: @celestialObject.DiscoveryDate.ToString("dd/MM/yyyy")</li>
                    </ul>
                </MatBody2>
            </MatCardContent>
            <MatCardActions>
                <MatButton OnClick="@(_ => OpenDiscoverySourceDialog(celestialObject.DiscoverySourceId))">View discovery source</MatButton>
            </MatCardActions>
        </MatCard>
    }
</div>

@code {
    private IEnumerable<CelestialObjectResponse> celestialObjectsResponse = new List<CelestialObjectResponse>();

    private IEnumerable<string> types = new List<string>();

    private readonly RequestParams requestParams = new();

    protected override async Task OnInitializedAsync()
    {
        var typesResponse = await client.GetFromJsonAsync<ApiResponse<GetCelestialObjectTypesResponse>>("/api/celestialObjects/types");

        types = typesResponse?.Result.Types ?? Array.Empty<string>();

        var response = await client.GetFromJsonAsync<ApiResponse<GetCelestialObjectsResponse>>("/api/celestialObjects");

        celestialObjectsResponse = response?.Result.CelestialObjects ?? Array.Empty<CelestialObjectResponse>();
    }

    private async Task UpdateCelestialObjectsAsync()
    {
        var response = await client.GetFromJsonAsync<ApiResponse<GetCelestialObjectsResponse>>($"/api/celestialObjects?name={requestParams.Name}&stateOwner={requestParams.StateOwner}&type={requestParams.Type}");

        celestialObjectsResponse = response?.Result.CelestialObjects ?? Array.Empty<CelestialObjectResponse>();
    }

    async Task OpenDiscoverySourceDialog(Guid id)
    {
        await MatDialogService.OpenAsync(typeof(DiscoverySourceDialog), new MatDialogOptions
        {
            Attributes = new Dictionary<string, object>()
            {
                { "DiscoverySourceIed", id }
            }
        });
    }

    public class RequestParams
    {
        public string Type { get; set; } = string.Empty;

        public string Name { get; set; } = string.Empty;

        public string StateOwner { get; set; } = string.Empty;
    }

}